version: 2.1

orbs:
  node: circleci/node@7.1.0

jobs:
  test:
    docker:
      - image: cimg/node:18.20-browsers
    resource_class: medium+
    steps:
      - checkout
      
      # Cache npm dependencies
      - restore_cache:
          keys:
            - npm-deps-v1-{{ checksum "package-lock.json" }}
            - npm-deps-v1-
      
      - node/install-packages:
          pkg-manager: npm
      
      - save_cache:
          key: npm-deps-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      
      # Cache Playwright browsers
      - restore_cache:
          keys:
            - playwright-browsers-v1-{{ checksum "package-lock.json" }}
            - playwright-browsers-v1-
      
      - run:
          name: Install Playwright Chrome browser
          command: npx playwright install chromium
      
      - save_cache:
          key: playwright-browsers-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/ms-playwright
      
      - run:
          name: Create test results directory
          command: mkdir -p test-results/playwright
      
      # Build the app and cache the build output
      - restore_cache:
          keys:
            - build-output-v1-{{ .Branch }}-{{ .Revision }}
            - build-output-v1-{{ .Branch }}-
            - build-output-v1-
      
      - run:
          name: Build app
          command: npm run build:dev
      
      - save_cache:
          key: build-output-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - dist
      
      - run:
          name: Start web server in background
          command: PORT=8108 npm run dev
          background: true
      
      - run:
          name: Wait for web server to start
          command: |
            # Wait for the server to be available
            for i in $(seq 1 30); do
              if curl -s http://localhost:8108 > /dev/null; then
                echo "Server is up!"
                exit 0
              fi
              echo "Waiting for server... ($i/30)"
              sleep 1
            done

            echo "Server failed to start"
            exit 1
      
      - run:
          name: Run Playwright tests
          command: |
            PLAYWRIGHT_JUNIT_OUTPUT_NAME=test-results/playwright/junit.xml npm run test:ci:full
      
      - store_test_results:
          path: test-results
      
      - store_artifacts:
          path: test-results
          destination: test-results
      
      - store_artifacts:
          path: playwright-report
          destination: playwright-report
      
      - store_artifacts:
          path: test-results/playwright/junit.xml
          destination: junit.xml

workflows:
  ci:
    jobs:
      - test